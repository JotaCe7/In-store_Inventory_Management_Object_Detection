FROM nvidia/cuda:11.3.0-cudnn8-runtime-ubuntu20.04 as base

ARG USER_ID
ARG GROUP_ID

# Install some packages
# ffmpeg libsm6 libxext6 -> opencv
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3.8-dev \
    python3-pip \
    ffmpeg \  
    libsm6 \
    libxext6 \
    nano \
    wget \
    curl \
    git

# Add a non-root user
RUN addgroup --gid $GROUP_ID app
RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID app
USER app

# Setup some paths
ENV PYTHONPATH=/home/app/.local/lib/python3.8/site-packages:/home/app/src
ENV PATH=$PATH:/home/app/.local/bin

# Install the python packages for this new user
ADD requirements.txt .
RUN pip3 install -r requirements.txt

# Tensorflow (and Keras) with GPU support
RUN pip3 install tensorflow-gpu==2.8.0

# PyTorch GPU 1.10
RUN pip3 install torch==1.10.0+cu111 torchvision==0.11.0+cu111 torchaudio==0.10.0 -f https://download.pytorch.org/whl/torch_stable.html

RUN mkdir -p /home/app/scripts
COPY download-vs-code-server.sh /home/app/scripts
WORKDIR /home/app
USER root
RUN chmod +x /home/app/scripts/download-vs-code-server.sh
RUN chown app /home/app/scripts/download-vs-code-server.sh
USER app
RUN /home/app/scripts/download-vs-code-server.sh
USER root
COPY add_env_path.sh /home/app/scripts
RUN chmod +x /home/app/scripts/add_env_path.sh
USER app

WORKDIR /home/app

# Run script to add code-server to PATH and install aditional extensions
# Call run docker without 'bash' at the end
CMD "." "/home/app/scripts/add_env_path.sh" ;"bash"

# docker build -t ins_inv_mng_obj_detect_gpu_jc --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) -f docker/Dockerfile_gpu .